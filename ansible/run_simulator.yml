- name: Simulator
  hosts: localhost
  connection: local
  remote_user: lis
  become: false
  vars:
    - drone_ros_path: "/home/mistry/ros2_ws"
    - drone_base_path: "/home/mistry/sim_drone_base"
    - drone_fcu_url: "udp://:14540@127.0.0.1:14557"
    - gcs_url: "localhost"

  
  tasks: 
 
  - name: Ensure ros2 ws exists
    ansible.builtin.file:
      path: "{{ drone_ros_path }}/src"
      state: directory

  - name: Optitrack
    when: "position_estimation == 'optitrack'"
    block: 
    
    - name: Get optitrack package
      ansible.builtin.git:
        repo: https://github.com/lis-epfl/optitrack_packages_ros2/
        dest: "{{ drone_ros_path }}/src/optitrack_packages_ros2"
        force: yes

    - name: Remove multiplexer
      ansible.builtin.file: 
        path: "{{ drone_ros_path }}/src/optitrack_packages_ros2/optitrack_multiplexer_ros2"
        state: absent

    - name: Remove wrapper
      ansible.builtin.file:   
        path: "{{ drone_ros_path }}/src/optitrack_packages_ros2/optitrack_wrapper_ros2"
        state: absent
    
    - name: Get mocap to vision package
      ansible.builtin.git: 
        repo: https://github.com/lis-epfl/mocap_to_vision_pose_ros2
        dest: "{{ drone_ros_path }}/src/mocap_to_vision_pose_ros2"
        force: yes 
        
    - name: SwarmNXT Nodes
      block: 
        - name: Get repository 
          ansible.builtin.git: 
            repo: git@github.com:lis-epfl/swarm-nxt
            dest: "{{ drone_base_path }}/repos/swarm-nxt"
            version: dummy-controller # TODO: temp
            key_file: ~/.ssh/id_ed25519
            accept_newhostkey: yes
            force: yes
          
        - name: List ros_packages directories
          ansible.builtin.find:
            paths: "{{ drone_base_path }}/repos/swarm-nxt/ros_packages"
            file_type: directory
            recurse: false
          register: ros_packages_reg
        

        - name: Link ros_packages directories to src
          ansible.builtin.file:
            src: "{{ item.path }}"
            dest: "{{ drone_ros_path }}/src/{{ item.path | basename }}"
            state: link
            force: true
          loop: "{{ ros_packages_reg.files }}"
        
    # - name: Install rosdeps
    #   become: true
    #   ansible.builtin.shell: |
    #     cd {{ drone_ros_path }}
    #     . /opt/ros/humble/setup.sh
    #     rosdep update # (broken for some reason? only on this computer...)
    #     rosdep install --from-paths {{ drone_ros_path }}/src -y --ignore-src -r 
             
    - name: Build ros packages
      ansible.builtin.shell: . /opt/ros/humble/setup.sh && colcon build --symlink-install 
      args:
        chdir: "{{ drone_ros_path }}"

    - name: Create config directory
      ansible.builtin.file:
        dest: "{{ drone_ros_path }}/config"
        state: directory
        mode: "755"
    
    - name: Send peer list
      ansible.builtin.template: 
        src: templates/peer_list.yaml.j2
        dest: "{{ drone_ros_path }}/config/peer_list.yaml"
        mode: "644"
      vars:
        peers: "{{ groups['drones'] | map('regex_replace', '\\.local$', '') | join('\n') }}"

    - name: Send launch file
      ansible.builtin.template:
        src: templates/drone_launch.py.j2
        dest: "{{ drone_base_path }}/launch.py"
      vars: 
        ns: "{{ ansible_hostname | map('regex_replace', '-', '_') | join('') }}"

    - name: Send 3D Bounds file
      ansible.builtin.copy:
        src: templates/bounds.json
        dest: "{{ drone_ros_path }}/config/bounds.json"
      

    - name: Create ros_packages script 
      vars: 
        ros_path: "{{ drone_ros_path }}"
        base_path: "{{ drone_base_path }}"
      ansible.builtin.template: 
        src: scripts/ros_packages_start.sh
        dest: "{{ drone_base_path }}/ros_packages_start.sh"
        mode: "755"
      
    - name: Create local services dir
      ansible.builtin.file: 
        dest: ~/.local/share/systemd/user
        state: directory
    
    - name: Install ros_packages service 
      vars:
        base_path: "{{ drone_base_path }}"
      ansible.builtin.template: 
        src: templates/ros_packages_service.j2
        dest: ~/.local/share/systemd/user/ros_packages.service

    - name: Start ros_packages service
      ansible.builtin.systemd: 
        name: ros_packages
        state: restarted
        enabled: false
        daemon_reload: true
        scope: user
    