- name: Drones Update
  hosts: drones
  remote_user: lis
  become: false
  
  tasks: 
  - name: Perform a safe upgrade # installs new packages if needed
    become: yes
    ansible.builtin.apt:
      update_cache: yes
      upgrade: "safe"
  
  - name: Update WiFi power save configuration
    become: yes
    block:
      - name: Create NetworkManager WiFi power save disable configuration
        ansible.builtin.template: 
          src: templates/90-disable-wifi-powersave.conf.j2
          dest: /etc/NetworkManager/conf.d/90-disable-wifi-powersave.conf
          mode: '0644'
      
      - name: Remove default NetworkManager WiFi power save configuration
        ansible.builtin.file:
          path: /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf
          state: absent
  - name: Install mcap
    become: yes
    ansible.builtin.apt:
      name: ros-humble-rosbag2-storage-mcap
      state: latest

  - name: Ensure persistent storage in journald.conf
    become: yes
    ansible.builtin.replace:
      path: /etc/systemd/journald.conf
      regexp: '^\s*#?Storage=.*$'
      replace: 'Storage=persistent'
                        
  
  - name: Ensure ros2 ws exists
    ansible.builtin.file:
      path: "{{ drone_ros_path }}/src"
      state: directory

  - name: Optitrack
    when: "position_estimation == 'optitrack'"
    block: 
    
    - name: Get optitrack package
      ansible.builtin.git:
        repo: https://github.com/lis-epfl/optitrack_packages_ros2/
        dest: "{{ drone_ros_path }}/src/optitrack_packages_ros2"
        force: yes

    - name: Remove multiplexer
      ansible.builtin.file: 
        path: "{{ drone_ros_path }}/src/optitrack_packages_ros2/optitrack_multiplexer_ros2"
        state: absent

    - name: Remove wrapper
      ansible.builtin.file:   
        path: "{{ drone_ros_path }}/src/optitrack_packages_ros2/optitrack_wrapper_ros2"
        state: absent
    
    - name: Get mocap to vision package
      ansible.builtin.git: 
        repo: https://github.com/lis-epfl/mocap_to_vision_pose_ros2
        dest: "{{ drone_ros_path }}/src/mocap_to_vision_pose_ros2"
        version: "niel/fix-check-launch" # TODO: temp
        force: yes 
    - name: SwarmNXT Nodes
      block: 
        - name: Get repository 
          ansible.builtin.git: 
              repo: https://github.com/lis-epfl/swarm-nxt
              dest: "{{ drone_base_path }}/repos/swarm-nxt"
              force: yes
          
        - name: List ros_packages directories
          ansible.builtin.find:
            paths: "{{ drone_base_path }}/repos/swarm-nxt/ros_packages"
            file_type: directory
            recurse: false
          register: ros_packages_reg
        

        - name: Link ros_packages directories to src
          ansible.builtin.file:
            src: "{{ item.path }}"
            dest: "{{ drone_ros_path }}/src/{{ item.path | basename }}"
            state: link
            force: true
          loop: "{{ ros_packages_reg.files }}"
        
    - name: Install rosdeps
      become: true
      ansible.builtin.shell: |
        cd {{ drone_ros_path }}
        . /opt/ros/humble/setup.sh
        rosdep init
        rosdep update
        rosdep install --from-paths {{ drone_ros_path }}/src -y --ignore-src -r
             
    - name: Build ros packages
      ansible.builtin.shell: . /opt/ros/humble/setup.sh && colcon build --symlink-install 
      args:
        chdir: "{{ drone_ros_path }}"
    
